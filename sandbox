# Scrape Holidays from https://www.timeanddate.com/holidays/us/ 
        # Remember, 2 previous years, current year, and 2  years into the future. You can scrape multiple years by adding year to the timeanddate URL. For example https://www.timeanddate.com/holidays/us/2022
        # Check to see if name and date of holiday is in innerHolidays array
        # Add non-duplicates to innerHolidays
        # Handle any exceptions.     

# url ='https://www.timeanddate.com/holidays/us/2022?hol=33554809'
from bs4 import BeautifulSoup
import requests
import csv
from datetime import datetime

def getHTML(url):
    response = requests.get(url)
    return response.text

# for i in range (2020,2025):
try:
    holidays = []
    
    for year in range(2020,2025):
        html = getHTML(f'https://www.timeanddate.com/holidays/us/{year}?hol=33554809')

        soup = BeautifulSoup(html, 'html.parser')
        table = soup.find('table', attrs={'id':'holidays-table'})
        body = table.find('tbody')

        
        
        

        for row in body.find_all('tr'):
            
            #Holiday Dictionary
            Holiday = {}

            date = row.find('th')
            name = row.find('a')

            #check rows where date and name are not None
            if date is not None and name is not None:
                
                date = date.text
                date = f"{date} {year}"
                date= datetime.strptime(date,"%b %d %Y")
                date = date.strftime('%Y-%m-%d')
                
                Holiday['Name'] = name.text
                Holiday['Date'] = date
            
            holidays.append(Holiday)

            #remove empty dictionaries from list
            while {} in holidays:
                holidays.remove({}) 

            #removing duplicate holidays
            holidays = [dict(t) for t in {tuple(d.items()) for d in holidays}]



    with open("holidays.csv","w", encoding="utf-8") as file:
        writer= csv.DictWriter(file, fieldnames = holidays[0].keys())
        writer.writeheader()
        writer.writerows(holidays)
        
              

except Exception as e:
        print(e)

